- hosts: server
  gather_facts: false
  tasks:
    - name: Mostrar senha do usuário admin do ArgoCD
      ansible.builtin.shell: |
        kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar client_secret do kanidm.dex
      ansible.builtin.shell: |
        kubectl get secret kanidm.dex -n global-secrets -o jsonpath='{.data.client_secret}' | base64 -d
      register: kanidm_secret
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar client_secret do dex.gitea
      ansible.builtin.shell: |
        kubectl get secret dex.gitea -n global-secrets -o jsonpath='{.data.client_secret}' | base64 -d
      register: gitea_secret
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar client_secret do dex.grafana
      ansible.builtin.shell: |
        kubectl get secret dex.grafana -n global-secrets -o jsonpath='{.data.client_secret}' | base64 -d
      register: grafana_secret
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar client_id do kanidm.dex
      ansible.builtin.shell: |
        kubectl get secret kanidm.dex -n global-secrets -o jsonpath='{.data.client_id}' | base64 -d
      register: kanidm_client_id
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret external
      ansible.builtin.shell: |
        kubectl get secret external -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: external_secret
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret gitea.admin
      ansible.builtin.shell: |
        kubectl get secret gitea.admin -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: gitea_admin
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret gitea.renovate
      ansible.builtin.shell: |
        kubectl get secret gitea.renovate -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: gitea_renovate
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret gitea.woodpecker
      ansible.builtin.shell: |
        kubectl get secret gitea.woodpecker -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: gitea_woodpecker
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret paperless.admin
      ansible.builtin.shell: |
        kubectl get secret paperless.admin -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: paperless_admin
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret registry.admin
      ansible.builtin.shell: |
        kubectl get secret registry.admin -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: registry_admin
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar conteúdo do secret woodpecker.agent
      ansible.builtin.shell: |
        kubectl get secret woodpecker.agent -n global-secrets -o json | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
      register: woodpecker_agent
      changed_when: false
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar account recovery do admin do Kanidm
      ansible.builtin.shell: |
        kubectl exec -it -n kanidm statefulset/kanidm -- kanidmd recover-account admin
      register: admin_recovery
      changed_when: false
      ignore_errors: true
      when: inventory_hostname == groups['server'][0]

    - name: Mostrar account recovery do idm_admin do Kanidm
      ansible.builtin.shell: |
        kubectl exec -it -n kanidm statefulset/kanidm -- kanidmd recover-account idm_admin
      register: idm_admin_recovery
      changed_when: false
      ignore_errors: true
      when: inventory_hostname == groups['server'][0]

    - name: Gravar saída das senhas em arquivo local
      copy:
        content: |
          ArgoCD: {{ argocd_password.stdout }}
          Kanidm Client ID: {{ kanidm_client_id.stdout }}
          Kanidm Client Secret: {{ kanidm_secret.stdout }}
          Gitea Client Secret: {{ gitea_secret.stdout }}
          Grafana Client Secret: {{ grafana_secret.stdout }}
          External: {{ external_secret.stdout }}
          Gitea Admin (gitea_admin): {{ gitea_admin.stdout }}
          Gitea Renovate: {{ gitea_renovate.stdout }}
          Gitea Woodpecker: {{ gitea_woodpecker.stdout }}
          Paperless Admin: {{ paperless_admin.stdout }}
          Registry Admin: {{ registry_admin.stdout }}
          Woodpecker Agent: {{ woodpecker_agent.stdout }}
          Kanidm Admin Recovery: {{ admin_recovery.stdout_lines | join('\n') }}
          Kanidm IDM Admin Recovery: {{ idm_admin_recovery.stdout_lines | join('\n') }}
        dest: /tmp/senhas_output.log
