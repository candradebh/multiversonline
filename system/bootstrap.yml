- name: Bootstrapping the cluster
  hosts: server
  gather_facts: false
  tasks:
    - block:

        - name: Sincronizar projeto do host local para o nó master
          ansible.posix.synchronize:
            src: "../../"
            dest: "/tmp/multiversonline/"
            recursive: yes
            delete: no
            rsync_opts:
              - "--exclude=.git"
              - "--exclude=.idea/"
              - "--exclude=.DS_Store"
              - "--exclude=__pycache__"
              - "--exclude=k3s-ansible/"
              - "--exclude=ProxmoxVE/"
          delegate_to: localhost
          run_once: true


        - name: Corrige permissões
          ansible.builtin.command: chown -R root:root /tmp/multiversonline
          become: true

        - name: Create ArgoCD namespace
          kubernetes.core.k8s:
            api_version: v1
            kind: Namespace
            name: argocd
            state: present

        - name: Verificar se é a primeira instalação
          kubernetes.core.k8s_info:
            kind: Pod
            label_selectors:
              - app.kubernetes.io/instance=gitea
            field_selectors:
              - status.phase=Running
          register: first_install

        - name: Render ArgoCD manifests from Helm chart
          kubernetes.core.helm_template:
            chart_ref: /tmp/multiversonline/system/argocd
            include_crds: true
            release_name: argocd
            release_namespace: argocd
            dependency_update: true
            values_files:
              - "/tmp/multiversonline/system/argocd/values-seed.yaml"
          register: argocd_manifests

        - name: Apply ArgoCD manifests
          kubernetes.core.k8s:
            resource_definition: "{{ argocd_manifests.stdout | from_yaml_all }}"
            apply: true


        - debug:
            msg: "Total de recursos renderizados: {{ argocd_manifests.stdout | from_yaml_all | length }}"

      when: inventory_hostname == groups[server_group][0]
